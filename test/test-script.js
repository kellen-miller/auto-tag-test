const tagPattern = /v\d+\.\d+\.\d+/
const platformClientGoVersion = require('fs')
	.readFileSync('../clients.go', 'utf8')
	.match(tagPattern)[0]

if (!platformClientGoVersion) {
	console.log(
		'No version for Go platform client found in clients.go\n',
		'Looked for pattern: ' + tagPattern + '\n',
		'Hint: A semver version (i.e. v1.2.3) is expected to be' +
			' declared as a constant (`const Version =' +
			' "v.1.2.3"`) near the top of the clients.go file.' +
			' This correlates to the platform client version' +
			' generated by theGrpcClientsGenerator.\n\n',
		'Skipping tag creation'
	)
	return
}
console.log('Found platform-client-go version: ' + platformClientGoVersion)

const gitCommand = 'git for-each-ref --sort=-v:refname --format="%(refname:lstrip=2)" refs/tags'
const tags = require('child_process')
	.execSync(gitCommand)
	.toString()
	.split('\n')
	.filter(tag => tag !== '')
console.log(tags)
	// (error, stdout, stderr) => {
	// 	if (error) {
	// 		// console.log(`error: ${error.message}`)
	// 		return
	// 	}
	// 	if (stderr) {
	// 		// console.log(`stderr: ${stderr}`)
	// 		return
	// 	}
	// 	console.log(stdout.split('\n'))
	// 	return stdout.split('\n')
	// }